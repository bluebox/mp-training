# Generated by Django 4.1 on 2022-10-12 12:14

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'User',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('Appointment_id', models.IntegerField(primary_key=True, serialize=False)),
                ('Time_of_appointment', models.TimeField()),
                ('appointment_date', models.DateField()),
                ('Appointment_Status', models.CharField(default='booked', max_length=20)),
            ],
            options={
                'db_table': 'Appointment',
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('branch_id', models.IntegerField(primary_key=True, serialize=False)),
                ('branch_name', models.CharField(max_length=50)),
                ('location', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'Branch',
            },
        ),
        migrations.CreateModel(
            name='ServicesProvided',
            fields=[
                ('service_id', models.IntegerField(primary_key=True, serialize=False)),
                ('service_name', models.CharField(max_length=50)),
                ('Amount_to_be_paid', models.IntegerField()),
            ],
            options={
                'db_table': 'services_provided',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('trans_id', models.IntegerField(primary_key=True, serialize=False)),
                ('trans_date', models.DateTimeField(auto_now_add=True)),
                ('trans_type', models.CharField(choices=[('Credit Card', 'Credit Card'), ('Debit Card', 'Debit Card'), ('Net Banking', 'Net Banking'), ('UPI', 'UPI'), ('Pay at Salon', 'Pay at Salon')], max_length=20)),
                ('Total_amount', models.IntegerField()),
                ('trans_status', models.CharField(max_length=20)),
                ('Appointment_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='salon.appointment')),
            ],
            options={
                'db_table': 'Transaction',
            },
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('review_id', models.IntegerField(primary_key=True, serialize=False)),
                ('comments_and_reviews', models.CharField(max_length=500)),
                ('rating', models.IntegerField()),
                ('Appointment_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='salon.appointment')),
            ],
            options={
                'db_table': 'Reviews',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('emp_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('role', models.CharField(max_length=20)),
                ('emp_contact_number', models.CharField(max_length=10)),
                ('branch_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='salon.branch')),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Employee',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Client_contact_number', models.CharField(max_length=10)),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Client',
            },
        ),
        migrations.AddField(
            model_name='appointment',
            name='client_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='salon.client'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='emp_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='salon.employee'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='services',
            field=models.ManyToManyField(to='salon.servicesprovided'),
        ),
    ]
