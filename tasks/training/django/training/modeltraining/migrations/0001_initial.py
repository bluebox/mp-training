# Generated by Django 4.1 on 2022-09-12 06:16

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.fields
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('mobile_number', models.CharField(default=0, max_length=12)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('addres', models.TextField(max_length=200)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('appointment_id', models.IntegerField(primary_key=True, serialize=False, verbose_name=django.db.models.fields.AutoField)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('slot', models.CharField(choices=[('10 AM', 'Morning'), ('1PM', 'Afternoon'), ('4 PM', 'Evening')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Lab',
            fields=[
                ('lab_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('lab_type', models.CharField(max_length=100)),
                ('lab_name', models.CharField(max_length=100)),
                ('lab_status', models.CharField(max_length=5000)),
                ('lab_number', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('role_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('role_name', models.CharField(max_length=100)),
                ('role_description', models.TextField(max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='User_role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=100)),
                ('qualification', models.CharField(max_length=100)),
                ('salary', models.IntegerField()),
                ('years_of_experience', models.IntegerField()),
                ('role_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='modeltraining.roles')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('test_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('test_type', models.CharField(max_length=100)),
                ('test_name', models.CharField(max_length=100)),
                ('test_description', models.TextField(max_length=5000)),
                ('lab', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='modeltraining.lab')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(max_length=200)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, max_length=200, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('report_type', models.CharField(blank=True, max_length=200, null=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modeltraining.appointment')),
            ],
        ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consultation_fee', models.IntegerField(blank=True, null=True)),
                ('test_fee', models.IntegerField(blank=True, null=True)),
                ('tax', models.IntegerField(blank=True, null=True)),
                ('total', models.IntegerField(default=0)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modeltraining.appointment')),
            ],
        ),
        migrations.AddField(
            model_name='appointment',
            name='staff',
            field=models.ManyToManyField(blank=True, to='modeltraining.user_role'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='test',
            field=models.ManyToManyField(blank=True, to='modeltraining.test'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
